#include "dashboard.h"
#include "ui_dashboard.h"
#include "status.h"
#include "status2.h"
#include "status3.h"
#include "map.h"
#include "udp_image_receiver.h" 
#include "control_popup1.h" 
#include "control_popup2.h" 
#include <QVBoxLayout>
#include <QLabel>
#include <QDebug>
#include <QStyle>
#include <QPushButton>

DashboardWidget::DashboardWidget(QWidget *parent) 
    : QWidget(parent)
    , ui(new Ui_DashboardWidget)
    , status_widget(nullptr) 
    , status_widget2(nullptr) // Ï∂îÍ∞Ä
    , status_widget3(nullptr) // Ï∂îÍ∞Ä
    , map_widget(nullptr)
    , udp_receiver_(nullptr) 
    , control_popup1_(nullptr) 
    , control_popup2_(nullptr) 
    , status_("Ïù¥ÎèôÏ§ë")
    , control_status_("OFF")
    , camera_toggle_status_("Ï†ÑÎ©¥")
{
    ui->setupUi(this);  // UI ÌååÏùº ÏÑ§Ï†ï
    setWidgetClasses();
    setupStatusWidget();
    setupMapWidget();
    setupCameraWidget(); 
    setupControlButton();  // Ï∂îÍ∞Ä
    setCameraToggleStatus();  // Ï¥àÍ∏∞ Ïπ¥Î©îÎùº ÏÉÅÌÉú ÏÑ§Ï†ï
}

DashboardWidget::~DashboardWidget()
{
    if (udp_receiver_) {     
        udp_receiver_->stop();
        delete udp_receiver_;
    }
    if (control_popup1_) {  // Ï∂îÍ∞Ä
        delete control_popup1_;
    }
    if (control_popup2_) {
        delete control_popup2_;
    }
    delete ui;
}

void DashboardWidget::setStatus(const QString& newStatus)
{
    if (status_ != newStatus) {
        QString oldStatus = status_;
        status_ = newStatus;
        
        // Í∏∞Ï°¥ status_widget, status_widget2, status_widget3 Î™®Îëê ÏÇ≠Ï†ú
        if (status_widget) {
            status_widget->hide();
            delete status_widget;
            status_widget = nullptr;
        }
        if (status_widget2) {
            status_widget2->hide();
            delete status_widget2;
            status_widget2 = nullptr;
        }
        if (status_widget3) {
            status_widget3->hide();
            delete status_widget3;
            status_widget3 = nullptr;
        }

        // ÏÉà status_widget ÏÉùÏÑ±
        if (status_ == "Ïù¥ÎèôÏ§ë") {
            status_widget = new StatusWidget(this);
            status_widget->setGeometry(477, 549, 753, 281);
            status_widget->show();
        } else if (control_status_ == "ON") {
            status_widget2 = new Status2Widget(this);
            status_widget2->setGeometry(477, 549, 753, 281);
            status_widget2->show();
        } else if (control_status_ == "OFF") {
            status_widget3 = new Status3Widget(this);
            status_widget3->setGeometry(477, 549, 753, 281);  // 16:9 ÎπÑÏú®Î°ú ÏÑ§Ï†ï
            status_widget3->show();
        }
        // ÏúÑÏπòÏôÄ ÌÅ¨Í∏∞ ÏÑ§Ï†ï
        
        qDebug() << "Î°úÎ¥á ÏÉÅÌÉú Î≥ÄÍ≤Ω:" << oldStatus << "‚Üí" << newStatus;
        
        // ÏÉÅÌÉúÍ∞Ä Î≥ÄÍ≤ΩÎêòÎ©¥ Ïó¥Î†§ÏûàÎäî ÌåùÏóÖÎì§ Îã´Í∏∞
        if (control_popup1_ && control_popup1_->isVisible()) {
            control_popup1_->hide();
        }
        if (control_popup2_ && control_popup2_->isVisible()) {
            control_popup2_->hide();
        }

        if (ui->status_label) {
            ui->status_label->setText(status_);
            ui->status_label->setProperty("class", status_ == "Ïù¥ÎèôÏ§ë" ? "label primary" : "label gray");
            ui->status_label->style()->unpolish(ui->status_label);
            ui->status_label->style()->polish(ui->status_label);
        } 

        if (ui->destinationBtn) {
            ui->destinationBtn->setVisible(status_ != "Ïù¥ÎèôÏ§ë");
            ui->destinationBtn->setVisible(control_status_ != "OFF");
        }
    }
}

void DashboardWidget::setCameraToggleStatus()
{
    if (ui->camera_toggle1) {
        ui->camera_toggle1->setProperty("class", camera_toggle_status_ == "Ï†ÑÎ©¥" ? "btn contained white otl-gray9" : "btn contained gray ");
        ui->camera_toggle1->style()->unpolish(ui->camera_toggle1);
        ui->camera_toggle1->style()->polish(ui->camera_toggle1);
    }
    if (ui->camera_toggle2) {
        ui->camera_toggle2->setProperty("class", camera_toggle_status_ == "ÌõÑÎ©¥" ? "btn contained white otl-gray9" : "btn contained gray ");
        ui->camera_toggle2->style()->unpolish(ui->camera_toggle2);
        ui->camera_toggle2->style()->polish(ui->camera_toggle2);
    }
}

void DashboardWidget::setControlStatus(const QString& newControlStatus)
{
    if (control_status_ != newControlStatus) {
        control_status_ = newControlStatus;
        qDebug() << "Ï†úÏñ¥ ÏÉÅÌÉú Î≥ÄÍ≤Ω:" << control_status_;
        
        if (status_widget2) {
            status_widget2->hide();
            delete status_widget2;
            status_widget2 = nullptr;
        }
        if (status_widget3) {
            status_widget3->hide();
            delete status_widget3;
            status_widget3 = nullptr;
        }

        if (control_status_ == "ON") {
            status_widget2 = new Status2Widget(this);
            status_widget2->setGeometry(477, 549, 753, 281);
            status_widget2->show();
            status_widget2->setMoveFirstText("Ï†ïÏßÄÏ§ë");
        } else if (control_status_ == "OFF") {
            status_widget3 = new Status3Widget(this);
            status_widget3->setGeometry(477, 549, 753, 281);  // 16:9 ÎπÑÏú®Î°ú ÏÑ§Ï†ï
            status_widget3->show();
        }

        if (ui->controlBtn) {
            if(control_status_ == "ON") {
                ui->controlBtn->setText("Ï†úÏñ¥ Ï§ëÏßÄ");
            } else if (control_status_ == "OFF") {
                ui->controlBtn->setText("ÏõêÍ≤© Ï†úÏñ¥");
            }
        }
        if (ui->destinationBtn) {
            ui->destinationBtn->setVisible(status_ != "Ïù¥ÎèôÏ§ë");
            ui->destinationBtn->setVisible(control_status_ != "OFF");
        }
    }
}

QString DashboardWidget::getStatus() const
{
    return status_;
}

QString DashboardWidget::getControlStatus() const
{
    return control_status_;
}

void DashboardWidget::setupControlButton()
{
    if (ui->controlBtn) {
        connect(ui->controlBtn, &QPushButton::clicked,
                this, &DashboardWidget::onControlButtonClicked);
    } else {
        qDebug() << "‚ùå controlBtnÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§!";
    }
    if (ui->destinationBtn) {
        connect(ui->destinationBtn, &QPushButton::clicked,
                this, &DashboardWidget::onDestinationButtonClicked);
    } else {
        qDebug() << "‚ùå destinationBtnÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§!";
    }

    if (ui->camera_toggle1) {
        connect(ui->camera_toggle1, &QPushButton::clicked,
                this, &DashboardWidget::onCameraToggle1Clicked);
    }
    if (ui->camera_toggle2) {
        connect(ui->camera_toggle2, &QPushButton::clicked,
                this, &DashboardWidget::onCameraToggle2Clicked);
    }
}

void DashboardWidget::onCameraToggle1Clicked()
{
    camera_toggle_status_ = "Ï†ÑÎ©¥";
    setCameraToggleStatus();
    qDebug() << "Ï†ÑÎ©¥ Ïπ¥Î©îÎùºÎ°ú Ï†ÑÌôòÎê®";
}

void DashboardWidget::onCameraToggle2Clicked()
{
    camera_toggle_status_ = "ÌõÑÎ©¥";
    setCameraToggleStatus();
    qDebug() << "ÌõÑÎ©¥ Ïπ¥Î©îÎùºÎ°ú Ï†ÑÌôòÎê®";
}

void DashboardWidget::setupStatusWidget()
{
    // StatusWidget ÏÉùÏÑ±
    if (status_ == "Ïù¥ÎèôÏ§ë") {
        status_widget = new StatusWidget(this);
        status_widget->setGeometry(477, 549, 753, 281);  // ÏúÑÏπòÏôÄ ÌÅ¨Í∏∞ Ï°∞Ï†ï
        status_widget->show();
    } else {
        status_widget2 = new Status2Widget(this);
        status_widget2->setGeometry(477, 549, 753, 281);  // ÏúÑÏπòÏôÄ ÌÅ¨Í∏∞ Ï°∞Ï†ï
        status_widget2->show();
    }
}

void DashboardWidget::onControlButtonClicked()
{
    qDebug() << "üéÆ Control Î≤ÑÌäº ÌÅ¥Î¶≠! ÌòÑÏû¨ ÏÉÅÌÉú:" << status_;
    
    if (status_ == "Ïù¥ÎèôÏ§ë") {
        // Ïù¥Îèô Ï§ëÏùº Îïå - control_popup1 ÌëúÏãú
        qDebug() << "Ïù¥Îèô Ï§ë ÏÉÅÌÉú ‚Üí ControlPopup1 ÌëúÏãú";
        
        // Îã§Î•∏ ÌåùÏóÖÏù¥ Ïó¥Î†§ÏûàÏúºÎ©¥ Îã´Í∏∞
        if (control_popup2_ && control_popup2_->isVisible()) {
            control_popup2_->hide();
        }
        
        // control_popup1 ÌëúÏãú
        if (control_popup1_ && control_popup1_->isVisible()) {
            control_popup1_->raise();
            control_popup1_->activateWindow();
            return;
        }
        if (!control_popup1_) {
            control_popup1_ = new ControlPopup1(this);
            connect(control_popup1_, &ControlPopup1::stopRequested, this, &DashboardWidget::setStatusToIdle);
        }
        
        control_popup1_->show();
        control_popup1_->raise();
        control_popup1_->activateWindow();

        
    } else {
        setControlStatus(control_status_ == "ON" ? "OFF" : "ON");
    }
}

void DashboardWidget::onDestinationButtonClicked()
{
    qDebug() << "üéÆ Destination Î≤ÑÌäº ÌÅ¥Î¶≠! ÌòÑÏû¨ ÏÉÅÌÉú:" << status_;

    // Îã§Î•∏ ÌåùÏóÖÏù¥ Ïó¥Î†§ÏûàÏúºÎ©¥ Îã´Í∏∞
    if (control_popup1_ && control_popup1_->isVisible()) {
        control_popup1_->hide();
    }
    
    // control_popup2 ÌëúÏãú (ÏûÑÏãúÎ°ú popup1Í≥º ÎèôÏùºÌïòÍ≤å, ÎÇòÏ§ëÏóê ÍµêÏ≤¥)
    if (control_popup2_ && control_popup2_->isVisible()) {
        control_popup2_->raise();
        control_popup2_->activateWindow();
        return;
    }
    
    // ControlPopup2 ÏÉùÏÑ± Î∞è ÌëúÏãú
    if (!control_popup2_) {
        control_popup2_ = new ControlPopup2(status_widget2, this);  // ‚Üê Ïã§Ï†úÎ°ú ControlPopup2 ÏÉùÏÑ±
    }
    
    control_popup2_->show();
    control_popup2_->raise();
    control_popup2_->activateWindow();
}

void DashboardWidget::setupMapWidget()
{
    map_widget = new MapWidget(this);
    
    map_widget->setGeometry(19, 58, 438, 772);  // ÏúÑÏπòÏôÄ ÌÅ¨Í∏∞ Ï°∞Ï†ï
    
    map_widget->show();
}

void DashboardWidget::setupCameraWidget()
{
    // UDP Ïù¥ÎØ∏ÏßÄ ÏàòÏã†Í∏∞ ÏÉùÏÑ±
    udp_receiver_ = new UdpImageReceiver("127.0.0.1", 8888, this);
    
    // ÏãúÍ∑∏ÎÑê Ïó∞Í≤∞
    connect(udp_receiver_, &UdpImageReceiver::imageReceived, 
            this, &DashboardWidget::onImageReceived);
    connect(udp_receiver_, &UdpImageReceiver::connectionError, 
            this, &DashboardWidget::onConnectionError);

    // Ïó∞Í≤∞ ÏÑ±Í≥µ ÏãúÍ∑∏ÎÑê Ï∂îÍ∞Ä (ÏÉàÎ°ú Ï∂îÍ∞ÄÌï† ÏòàÏ†ï)
    connect(udp_receiver_, &UdpImageReceiver::connectionEstablished,
            this, &DashboardWidget::onConnectionEstablished);
    
    // ÏàòÏã† ÏãúÏûë
    udp_receiver_->start();
    
    // camera_imgÏóê Í∏∞Î≥∏ ÌÖçÏä§Ìä∏ ÏÑ§Ï†ï
    if (ui->camera_img) {
        ui->camera_img->setText("AI Server Ïó∞Í≤∞ Ï§ë...\n127.0.0.1:8888");
        ui->camera_img->setAlignment(Qt::AlignCenter);
        ui->camera_img->setScaledContents(true);
        
        // Ïó∞Í≤∞ Ï§ë Ïä§ÌÉÄÏùº
        ui->camera_img->setStyleSheet("background-color: #333; color: yellow; font-size: 14px;");
    }
}

void DashboardWidget::setStatusToIdle() {
    setStatus("ÎåÄÍ∏∞Ï§ë");
    setControlStatus(control_status_ == "ON" ? "OFF" : "ON");
}

void DashboardWidget::onImageReceived(const QPixmap& pixmap)
{
    static bool first_image = true;
    if (first_image) {
        qDebug() << "‚úÖ AI Server Ïó∞Í≤∞ ÏÑ±Í≥µ! Ïù¥ÎØ∏ÏßÄ ÏàòÏã† ÏãúÏûë";
        first_image = false;
    }

    if (ui->camera_img) {
        // camera_imgÏóê Î∞õÏùÄ Ïù¥ÎØ∏ÏßÄ ÌëúÏãú
        ui->camera_img->setPixmap(pixmap.scaled(
            ui->camera_img->size(), 
            Qt::KeepAspectRatio, 
            Qt::SmoothTransformation
        ));

        // Ïó∞Í≤∞ ÏÑ±Í≥µ Ïãú Ïä§ÌÉÄÏùº Ï¥àÍ∏∞Ìôî
        ui->camera_img->setStyleSheet("");
    }
}

void DashboardWidget::onConnectionError(const QString& error)
{
    qDebug() << "‚ùå AI Server Ïó∞Í≤∞ Ïã§Ìå®:" << error;
    
    if (ui->camera_img) {
        ui->camera_img->setText("Ïπ¥Î©îÎùº Ïó∞Í≤∞ Ïã§Ìå®\n" + error);
        ui->camera_img->setAlignment(Qt::AlignCenter);
    }
}

// ÏÉàÎ°ú Ï∂îÍ∞ÄÌï† Ïä¨Î°Ø
void DashboardWidget::onConnectionEstablished()
{
    qDebug() << "üîó AI Server UDP ÏÜåÏºì Ïó∞Í≤∞Îê® (127.0.0.1:8888)";
    
    if (ui->camera_img) {
        ui->camera_img->setText("AI Server Ïó∞Í≤∞Îê®\nÏù¥ÎØ∏ÏßÄ ÏàòÏã† ÎåÄÍ∏∞ Ï§ë...");
        ui->camera_img->setStyleSheet("background-color: #333; color: green; font-size: 14px;");
    }
}

void DashboardWidget::setWidgetClasses()
{
    if (ui->title_point1) {
        ui->title_point1->setProperty("class", "title_point");
    }
    if (ui->title_point2) {
        ui->title_point2->setProperty("class", "title_point");
    }
    if (ui->title_point3) {
        ui->title_point3->setProperty("class", "title_point");
    }
    if (ui->title1) {
        ui->title1->setProperty("class", "size16 weight700");
    }
    if (ui->title2) {
        ui->title2->setProperty("class", "size16 weight700");
    }
    if (ui->title3) {
        ui->title3->setProperty("class", "size16 weight700");
    }
    if (ui->destinationBtn) {
        ui->destinationBtn->setProperty("class", "btn outlined primary_dark small");
        ui->destinationBtn->setVisible(status_ != "Ïù¥ÎèôÏ§ë");
        ui->destinationBtn->setVisible(control_status_ != "OFF");
    }
    if (ui->controlBtn) {
        ui->controlBtn->setProperty("class", "btn outlined primary_dark small");
    }
    if (ui->camera_toggle_bg) {
        ui->camera_toggle_bg->setProperty("class", "bg graye radius");
    }
    if (ui->camera_toggle1) {
        ui->camera_toggle1->setProperty("class", "btn contained white otl-gray9");
    }
    if (ui->camera_toggle2) {
        ui->camera_toggle2->setProperty("class", "btn contained gray");
    }
    if (ui->camera_bg) {
        ui->camera_bg->setProperty("class", "bg green_gray1 radius");
    }
    if (ui->camera_img) {
        ui->camera_img->setProperty("class", "camera_img");
    }
    
    if (ui->status_label) {
        ui->status_label->setProperty("class", status_ == "Ïù¥ÎèôÏ§ë" ? "label primary" : "label gray");
        ui->status_label->setText(status_);
    }
}

void DashboardWidget::show_at(const QPoint& pos)
{
    move(pos);
    show();
}

void DashboardWidget::refresh()
{
    if (status_widget) {
        status_widget->refresh();
    }
    if (map_widget) {
        map_widget->refresh();
    }
}
